{
  "name": "dark-builder",

  "build": {
    "context": "..",
    "dockerfile": "../Dockerfile"
  },

  // Set *default* container specific settings.json values on container create.
  "settings": {
    "terminal.integrated.defaultProfile.linux": "bash",
    "remote.containers.cacheVolume": true,
    "remote.containers.workspaceMountConsistency": "delegated",
    "editor.tabSize": 2,
    "files.trimTrailingWhitespace": true,
    "python.formatting.provider": "yapf"
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "shuumatsu.vscode-ocamlformat",
    "ms-python.python",
    "ms-azuretools.vscode-docker",
    "editorconfig.editorconfig",
  ],

  /////////////////////////////////////////////////
  // From here down, the contents are supposed to represent the exact same
  // as we see in script/builder
  /////////////////////////////////////////////////

  // Ports are loaded in the build process
  "forwardPorts": [
    8000
  ],

  "containerEnv": {
    "IN_DEV_CONTAINER": "true"
  },

  "runArgs": [
    "--dns",
    "8.8.8.8",
    "--dns",
    "8.8.4.4",
    "--hostname",
    "dark-ocaml-dev",
    "--env-file",
    "config/dev",
    "--env",
    "HOST_PWD=${localWorkspaceFolder}",
    "--security-opt",
    "seccomp=scripts/devcontainer/chrome-seccomp.json",
    "--security-opt",
    "seccomp=unconfined",
    "--label",
    "dark-ocaml-dev-container",
    "--workdir",
    "/home/dark/app"
  ],

  "workspaceMount": "source=${localWorkspaceFolder},target=/home/dark/app,type=bind,consistency=delegated", // for local
  // If using a remote DOCKER_HOST, you need to mount a directory on the remote host
  // "workspaceMount": "source=/home/paulbiggar/projects/dark,target=/home/dark/app,type=bind,consistency=delegated",
  "workspaceFolder": "/home/dark/app",

  "mounts": [
    // Docker-in-Docker - uncomment this to be able to build Dark's production containers
    // "type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock",

    // gcloud - uncomment this to use scripts which require gcloud permissions
    // "type=bind,src=${localEnv:HOME}${localEnv:USERPROFILE}/.config/gcloud,dst=/home/dark/.config/gcloud,consistency=cached",
    // If using a remote DOCKER_HOST, you need to mount a directory on the remote host instead
    // "type=bind,src=/home/paulbiggar/.config/gcloud,dst=/home/dark/.config/gcloud,consistency=cached",

    // Bash history - uncomment this to save bash history between container restarts
    // "type=bind,src=${localEnv:HOME}${localEnv:USERPROFILE}/.dark_bash_history,dst=/home/dark/.bash_history,consistency=cached",
    // If using a remote DOCKER_HOST, you need to mount a directory on the remote host instead
    // "type=bind,src=/home/paulbiggar/.dark_bash_history,dst=/home/dark/.bash_history,consistency=cached",

    // Build directories
    "type=volume,src=dark_ocaml_build,dst=/home/dark/app/_build",
    "type=volume,src=dark_ocaml_dotesy,dst=/home/dark/.esy",
    "type=volume,src=dark_ocaml_esy,dst=/home/dark/app/_esy",

    // Postgres
    "type=volume,src=ocaml_pgconf,dst=/etc/postgresql",
    "type=volume,src=ocaml_pglogs,dst=/var/log/postgresql",
    "type=volume,src=ocaml_pgdata,dst=/var/lib/postgresql",

    // VSCode extensions
    "type=volume,src=darklang-dark-ocaml-extension-volume,dst=/home/dark/.vscode-server/extensions",
    "type=volume,src=darklang-dark-ocaml-extension-volume-insiders,dst=/home/dark/.vscode-server-insiders/extensions"
  ],

  // See https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "dark",
  "containerUser": "dark",
  "updateRemoteUserUID": true,

  // Run one build-server, and keep it running for the life of the
  // devcontainer. This is in postStart rather than postAttach as postAttach would
  // add a new build-server each time and we only want one.
  "postStartCommand": "./scripts/devcontainer/_vscode-post-start-command",

  // Show the build-server output in a terminal
  // Use -F as it the build-server might not have output by the time this starts
  "postAttachCommand": "tail -n 1000 -F rundir/logs/build-server.log"
}
